<project name="WebappTut" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

    <description>A tutorial for myself on developing java webapps</description>

    <property file="build.properties" />

    <!-- directories and such -->
    <property name="app.dir" location="app" />
    <property name="src.dir" location="src" />
    <property name="target.dir" location="${app.dir}/WEB-INF/classes" />
    <property name="lib.dir" location="lib" />

    <!-- All about our webapp -->
    <property name="app.context" value="/webapptut" />
    <property name="tomcat.user" value="cli" />
    <property name="tomcat.password" value="pass" />
    <property name="tomcat.url" value="http://localhost:8080/manager/text" />
    <property name="catalina.home" value="/usr/local/brew/Cellar/tomcat/7.0.50/libexec" />
    <condition property="app.exists">
        <available file="${catalina.home}/webapps${app.context}" />
    </condition>
    <condition property="app.notexists">
        <not>
            <istrue value="${app.exists}" />
        </not>
    </condition>


    <!-- probably a better way to do this... -->
    <path id="tomcat.path">
        <fileset dir="lib">
            <include name="**/tomcat-*.jar" />
            <exclude name="**/tomcat-*-sources.jar" />
        </fileset>
    </path>

    <!-- easiest thing to do is symlink our `app` directory into CATALINA_HOME/webapps -->
    <target name="create-symlink" description="Symlink or ${app.dir} to ${catalina.home}/webapps${app.context}" if="app.notexists">
        <symlink link="${catalina.home}/webapps${app.context}" resource="${app.dir}" overwrite="false" />
    </target>

    <target name="remove-symlink" description="Delete the symlink from ${app.dir} to ${catalina.home}/webapps${app.context}" if="app.exists">
        <symlink link="${catalina.home}/webapps${app.context}" resource="${app.dir}" action="delete" />
    </target>

    <!-- wrapped up in a task so it doesn't fuck with other taks when we don't have deps yet -->
    <target name="prepare-tomcat" depends="create-symlink" description="Define the tomcat ant tasks">
        <taskdef resource="org/apache/catalina/ant/catalina.tasks" classpathref="tomcat.path" />
    </target>

    <target name="reload" depends="prepare-tomcat,compile">
        <reload
            url="${tomcat.url}"
            username="${tomcat.user}"
            password="${tomcat.password}"
            path="${app.context}" />
    </target>

    <target name="clean-build" description="Clean out or WEB-INF/classes">
        <delete includeemptydirs="true">
            <fileset dir="${target.dir}">
                <exclude name="**/.gitignore" />
                <exclude name="**/readme.md" />
            </fileset>
        </delete>
    </target>

    <target name="compile" depends="clean-build" description="Compile all the things!">
        <javac
            srcdir="${src.dir}"
            destdir="${target.dir}"
            classpathref="tomcat.path"
            includeantruntime="false" />
    </target>

    <target name="deps.compile" description="Install the `compile` dependencies in `ivy.xml`">
        <ivy:retrieve conf="compile" />
    </target>

    <target name="deps.app" description="Install the `app` dependencies in `ivy.xml`">
        <ivy:retrieve conf="app" />
    </target>

    <target name="deps.cache" description="Clean the Ivy cache">
        <ivy:cleancache />
    </target>

    <target name="deps.cleanapp" description="Remove the `compile` dependencies">
        <delete includeemptydirs="true">
            <fileset dir="${lib.dir}">
                <exclude name=".gitignore" />
                <exclude name="readme.md" />
            </fileset>
        </delete>
    </target>

    <target name="deps.cleancompile" description="Remove the `compile` dependencies">
        <delete includeemptydirs="true">
            <fileset dir="${app.dir}/WEB-INF/lib">
                <exclude name=".gitignore" />
                <exclude name="readme.md" />
            </fileset>
        </delete>
    </target>

    <target name="deps.cleanall"
        description="Clean all the deps"
        depends="deps.cleanapp,deps.cleancompile,deps.cache" />

    <target name="deps" description="Install all dependencies in `ivy.xml`" depends="deps.compile,deps.app" />

</project>
